"use strict";

// Попытка добавить обработчик события к элементу с классом "active"
try {
    // Пытаемся найти элемент с классом 'active' и добавить ему событие 'click'
    document.querySelector('.active').addEventListener('click', () => {
        console.log('click'); // Сообщение, которое выводится при нажатии
    });
} catch (e) {
    // Если произошла ошибка (например, элемент с классом 'active' не найден), программа не остановится
    // Ошибка будет "поймана", но ничего не произойдёт (тело catch пустое)
}

// Этот код выполнится в любом случае, даже если была ошибка в блоке try
console.log('normal'); // Сообщение "normal" будет выведено всегда


// Пример блока try...catch с логированием ошибки
/*
try {
    console.log('Normal'); // Выводим сообщение "Normal"
    console.log(a); // Пытаемся вывести переменную a, которая не определена
    console.log('result'); // Этот код не выполнится, так как в предыдущей строке произошла ошибка
} catch (error) {
    // Если в блоке try возникает ошибка, выполнение переходит сюда
    console.log('error.name');    // Вывод имени ошибки (например, "ReferenceError")
    console.log('error.message'); // Вывод сообщения об ошибке (например, "a is not defined")
    console.log('error.stack');   // Вывод стека вызовов (показывает, где произошла ошибка)
} finally {
    // Этот блок выполнится в любом случае, произошла ошибка или нет
    // Например, можно использовать для освобождения ресурсов
}
*/

// Пример без блока try...catch
// console.log(a); // Ошибка (переменная a не определена), программа остановится
// console.log('Still normal'); // Этот код не выполнится, так как ошибка выше завершит выполнение
